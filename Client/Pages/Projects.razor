@page "/projects"

<div class="container">
    <div class="m-5">
        <div class="text-center col-12">
            <h3 class="text-uppercase">List of projects</h3>
        </div>
    </div>

    <hr />
    <div class="m-5">
        <div class="d-flex justify-content-between">
            <div></div>
            <AuthorizeView Roles="Admin">
                <Authorized>
                    <button class="btn btn-secondary" @onclick="@(()=>NavigationManager.NavigateTo("addproject", forceLoad: true))">Add Project</button>
                </Authorized>
            </AuthorizeView>
        </div>
    </div>

    <div class="input-group">
        <label for="txtSearch" class="form-label">Search by title</label>
        <input type="text" class="form-control m-3" placeholder="Search project by title" @bind="SearchTerm"
            @oninput="HandleSearchFilter" />
    </div>

    <div class="row g-3">
        @if (ProjectList is null || !ProjectList.Any())
        {
            <div class="d-flex justify-content-center">
                <div id="loadingIndicator" class="spinner-border" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            </div>
        }
        else
        {
            @foreach (var info in ProjectList)
            {
                <div class="col-12 col-md-6 col-lg-6 col-sm-6">
                    <div class="card">
                        <img src="@info.ImgUrl" class="card-img-top" alt="Card Image" width="5rem" height="500rem" />
                        <div class="card-body" style="width: 35rem; height: 15rem; overflow: auto;">
                            <h5 class="card-title text-center">@info.Title</h5>
                            <p class="card-text mx-auto text-center">@info.Description</p>
                            <div class="text-center">
                                <a class="card-link btn btn-primary" target="_blank" rel="noopener noreferrer"
                                    href="@info.ProjectLink">Link to project
                                </a>
                                <a class="card-link btn btn-primary" target="_blank" rel="noopener noreferrer"
                                    href="@info.SourceCodeLink">Source code</a>
                                <a class="card-link btn btn-primary" target="_blank" rel="noopener noreferrer"
                                    href="@info.SourceCodeLink">Source code</a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>


@code {
    private IEnumerable<ProjectCardDTO>? ProjectList { get; set; }
    private string? SearchTerm { get; set; }
    private HttpClient httpClient;

    protected override async Task OnInitializedAsync()
    {
        httpClient = httpClientFactory.CreateClient(Constants.HTTP_CLIENT);
        ProjectList = await httpClient.GetFromJsonAsync<IEnumerable<ProjectCardDTO>>("api/Projects/get-projects");
    }

    protected void HandleSearchFilter(ChangeEventArgs e)
    {
        SearchTerm = e?.Value?.ToString();
        if (string.IsNullOrEmpty(SearchTerm))
        {
            return;
        }

        ProjectList = ProjectList?.Where(project => project.Title!.ToLower().Contains(SearchTerm.ToLower()));
    }
}