@page "/blogcard/{Title}"



@if (Model is null)
{
    <div class="d-flex justify-content-center" style="display: none;">
        <div id="loadingIndicator" class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else
{
    <div class="text-center">

    <a href="blogs"
        class="m-20 bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded">Back
        to Blogs</a>
    <h2 class="m-5"><b>@Model.Title</b></h2>
    <hr />
    <div class="m-5">
        @Model.FullDesc
    </div>

        @if (Model.VideoUrls is not null)
        {
            @foreach (var videoUrlModel in @Model.VideoUrls)
            {
                <div class="video-player">
                    <iframe class="embedded-video" src="@videoUrlModel.url" frameborder="0"
                        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                        allowfullscreen></iframe>
                </div>
            }
        }
        <hr />

        @if (Model.BlogImageDTOs != null && Model.BlogImageDTOs.Any())
        {
            @foreach (var image in Model.BlogImageDTOs)
            {
                var base64String = Convert.ToBase64String(image.ImageData);
                var imageUrl = $"data:{image.ContentType};base64,{base64String}";
                @* <img src="@imageUrl" alt="Blog Image" style="max-width: 300px; margin-top: 10px;" /> *@
            }
            <Client.Layout.Carousel ImageUrls="@(Model.BlogImageDTOs.Select(bi=> {
                var base64String = Convert.ToBase64String(bi.ImageData);
                var imageUrl = $"data:{bi.ContentType};base64,{base64String}";
                return imageUrl;
            }).ToArray())"/>
        }

        
    </div>
}


@code {

    [Parameter]
    public string Title { get; set; }

    protected BlogDTO? Model { get; set; }
    private HttpClient httpClient;

    protected override async Task OnInitializedAsync()
    {
        httpClient = httpClientFactory.CreateClient(Constants.HTTP_CLIENT);

        var response = await
        httpClient.GetAsync($"api/Blogs/get-by-title/{Title}");

        //Console.WriteLine(response.IsSuccessStatusCode);

        if (response.IsSuccessStatusCode)
        {
            var data = await response.Content.ReadFromJsonAsync<BlogDTO>();

            //var dto = JsonConvert.DeserializeObject<BlogDTO>(data);
            //System.Console.WriteLine(dto);

            Model = data;
        }
    }


}