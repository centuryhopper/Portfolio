@page "/blog-details/{BlogId:int}"
@using Ganss.Xss

<style>
    .bold { font-weight: bold; }
    .italic { font-style: italic; }
</style>


@if (BlogDTO is null)
{
    <div class="d-flex justify-content-center" style="display: none;">
        <div id="loadingIndicator" class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else
{
    <div class="text-center m-5">
        <a class="btn btn-primary" href="blogs">
            Back to Blogs
        </a>
        <h2 class="m-5"><b>@BlogDTO.Title</b></h2>
        <hr />
        <div class="m-5">
            @((MarkupString) BlogDTO!.FullDesc)
            @* @(BlogDTO!.FullDesc) *@
        </div>

        @if (BlogDTO.VideoUrlDTOs is not null)
        {
            @foreach (var v in @BlogDTO.VideoUrlDTOs)
            {
                <div class="video-player">
                    @((MarkupString) v.Url)
                </div>
            }
        }
        <hr />

        @if (BlogDTO.BlogImageDTOs != null && BlogDTO.BlogImageDTOs.Any())
        {
            <Client.Layout.Carousel ImageUrls="@(BlogDTO.BlogImageDTOs.Select(bi=> {
                var base64String = Convert.ToBase64String(bi.ImageData);
                var imageUrl = $"data:{bi.ContentType};base64,{base64String}";
                return imageUrl;
            }).ToArray())"/>
        }

    </div>
}


@code {

    [Parameter]
    public int BlogId { get; set; }
    private BlogDTO? BlogDTO { get; set; } = null;
    private HttpClient httpClient;
    private MarkupString SanitizedBlogContent { get; set; }

    protected override async Task OnInitializedAsync()
    {
        httpClient = httpClientFactory.CreateClient(Constants.HTTP_CLIENT);

        BlogDTO = await
        httpClient.GetFromJsonAsync<BlogDTO>($"api/Blogs/get-blog/{BlogId}");

        // Console.WriteLine(response.IsSuccessStatusCode);

        //if (response.IsSuccessStatusCode)
        //{
        //    var data = await response.Content.ReadFromJsonAsync<BlogDTO>();

            // var dto = JsonConvert.DeserializeObject<BlogDTO>(data);
            // System.Console.WriteLine(dto);

            //BlogDTO = data;
            //SanitizedBlogContent = Helpers.SanitizeHtmlContent(BlogDTO!.FullDesc);
        //}
    }
}

