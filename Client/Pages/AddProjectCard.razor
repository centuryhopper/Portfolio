@page "/addproject"
@using System.Text
@using HandyBlazorComponents.Components
@using HandyBlazorComponents.Models
@attribute [Authorize(Roles = "Admin")]



<div class="text-center m-5">
    <h3>Add Project</h3>
    <a class="btn btn-primary" href="projects">
        Back to Projects
    </a>
</div>
<div class="container">
    <EditForm Model="@ProjectCardDTO" OnValidSubmit="SaveProjectCard">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <InputText @bind-Value="ProjectCardDTO.Title" placeholder="Enter your project title" class="form-control m-3 w-75" @oninput="@((e) => {
            IsPageDirty = true;
        })"/>
        <ValidationMessage For="@(() => ProjectCardDTO.Title)" />
        <InputText @bind-Value="ProjectCardDTO.Description" placeholder="Enter a description for your project" class="form-control m-3 w-75" @oninput="@((e) => {
            IsPageDirty = true;
        })"/>
        <ValidationMessage For="@(() => ProjectCardDTO.Description)" />
        <InputText @bind-Value="ProjectCardDTO.ImgUrl" placeholder="Enter the url to an image for your project" class="form-control m-3 w-75" @oninput="@((e) => {
            IsPageDirty = true;
        })"/>
        <ValidationMessage For="@(() => ProjectCardDTO.ImgUrl)" />
        <InputText @bind-Value="ProjectCardDTO.SourceCodeLink" placeholder="Enter the link to your source code" class="form-control m-3 w-75" @oninput="@((e) => {
            IsPageDirty = true;
        })"/>
        <ValidationMessage For="@(() => ProjectCardDTO.SourceCodeLink)" />
        <InputText @bind-Value="ProjectCardDTO.ProjectLink" placeholder="Enter the link to your project" class="form-control m-3 w-75" @oninput="@((e) => {
            IsPageDirty = true;
        })"/>
        <ValidationMessage For="@(() => ProjectCardDTO.ProjectLink)" />

        <button type="submit" class="btn btn-primary m-3">Save</button>
    </EditForm>
</div>

<HandyToast @ref="handyToast" Title="Success" Message="Your operation completed successfully." ToastType="HandyToastType.SUCCESS" Duration="5" />



<HandyFormTracker />

@code {

    private bool IsPageDirty = false;
    private ProjectCardDTO ProjectCardDTO = new();
    private HttpClient httpClient { get; set; }
    private HandyToast handyToast = default!;

    protected override async Task OnInitializedAsync()
    {
        httpClient = httpClientFactory.CreateClient(Constants.HTTP_CLIENT);
        Console.WriteLine(NavigationManager.BaseUri);
    }

    private async Task SaveProjectCard()
    {
        // api call
        var response = await httpClient.PostAsJsonAsync("api/Projects/add-project", ProjectCardDTO);
        var responseContent = await response.Content.ReadFromJsonAsync<GeneralResponse>();
        if (!responseContent.Flag)
        {
            _ = handyToast.ShowToastAsync("Error", responseContent.Message, HandyToastType.ERROR);
        }
        else
        {
            _ = handyToast.ShowToastAsync("Success", responseContent.Message, HandyToastType.SUCCESS);
            ProjectCardDTO = new();
            IsPageDirty = false;
            // NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);
        }
    }
}
