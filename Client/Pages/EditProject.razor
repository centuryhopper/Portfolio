@page "/edit-project/{BlogId:int}"

@using System.Text
@using HandyBlazorComponents.Components
@using HandyBlazorComponents.Models
@attribute [Authorize(Roles = "Admin")]


<div class="container">
    <div class="text-center m-5">
        <h3>Edit Project (@ProjectCardDTO.Title)</h3>
        <a class="btn btn-primary" href="projects">
            Back to Projects
        </a>
    </div>

    @if (ProjectCardDTO is not null)
    {
        <EditForm Model="@ProjectCardDTO" OnValidSubmit="SaveProject">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <InputText @bind-Value="ProjectCardDTO.Title" @oninput="@((e) => {
                // Console.WriteLine(e.Value.ToString());
                IsPageDirty = true;
            })" placeholder="Enter your project title" class="form-control m-3 w-75" />

            <InputText @bind-Value="ProjectCardDTO.Description" @oninput="@((e) => {
                IsPageDirty = true;
            })" placeholder="Enter your project description" class="form-control m-3 w-75" />

            <InputText @bind-Value="ProjectCardDTO.ProjectLink" @oninput="@((e) => {
                IsPageDirty = true;
            })" placeholder="Enter your project link" class="form-control m-3 w-75" />

            <InputText @bind-Value="ProjectCardDTO.SourceCodeLink" @oninput="@((e) => {
                IsPageDirty = true;
            })" placeholder="Enter your project source code link" class="form-control m-3 w-75" />

            <button type="submit" class="btn btn-primary m-3">Save</button>
        </EditForm>
    }
</div>


<HandyToast @ref="handyToast" Title="Success" Message="Your operation completed successfully."
    ToastType="HandyToastType.SUCCESS" Duration="5" />

<HandyFormTracker />

@code {

    private bool IsPageDirty = false;

    [Parameter]
    public int BlogId { get; set; }
    private ProjectCardDTO ProjectCardDTO = new();
    private HttpClient httpClient { get; set; }
    private HandyToast handyToast = default!;
    private bool showRichTextEditor = false;

    protected override async Task OnInitializedAsync()
    {
        httpClient = httpClientFactory.CreateClient(Constants.HTTP_CLIENT);
        ProjectCardDTO = await httpClient.GetFromJsonAsync<ProjectCardDTO>($"api/Projects/get-project/{BlogId}");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            showRichTextEditor = true;
        }
    }

    private async Task SaveProject()
    {
        // api call
        // Console.WriteLine(ProjectDTO);
        var response = await httpClient.PatchAsJsonAsync("api/Projects/edit-project", ProjectCardDTO);
        var responseContent = await response.Content.ReadFromJsonAsync<GeneralResponse>();
        if (!responseContent.Flag)
        {
            _ = handyToast.ShowToastAsync("Error", responseContent.Message, HandyToastType.ERROR);
        }
        else
        {
            _ = handyToast.ShowToastAsync("Success", responseContent.Message, HandyToastType.SUCCESS);
            IsPageDirty = false;
        }
    }
}
