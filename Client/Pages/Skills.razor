@page "/skills"

@if (SkillsLst is null || !SkillsLst.Any())
{
    <div class="d-flex justify-content-center">
        <div id="loadingIndicator" class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else
{
    @foreach (var (i, skill) in SkillsLst.Select((skill, idx) => (idx, skill)))
    {

        <h2>@skill.Title</h2>
        <ul>
            @foreach (var desc in skill.Descriptions)
            {
                <li>
                    @desc
                </li>
            }
        </ul>
        if (i != SkillsLst.Count() - 1)
        {
            <hr>
        }
    }
}



@code {
    private IEnumerable<SkillDTO>? SkillsLst { get; set; }
    private HttpClient httpClient;

    protected override async Task OnInitializedAsync()
    {
        httpClient = httpClientFactory.CreateClient(Constants.HTTP_CLIENT);
        SkillsLst = await
        httpClient.GetFromJsonAsync<IEnumerable<SkillDTO>>("api/Skills/get-skills");
    }
}